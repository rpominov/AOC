// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var AoC = require("../AoC.bs.js");
var Tools = require("../Tools.bs.js");
var Belt_Array = require("rescript/lib/js/belt_Array.js");

function draw(img) {
  return img.map(function (row) {
                return row.map(function (x) {
                              if (x === "1") {
                                return "#";
                              } else {
                                return ".";
                              }
                            }).join("");
              }).join("\n");
}

function enhance(param, algo) {
  var fill = param[1];
  var img = param[0];
  var maxY = img.length + 1 | 0;
  var maxX = img[0].length + 1 | 0;
  var filledRow = Belt_Array.make(maxY + 3 | 0, fill);
  var img$p = [
      [
        filledRow,
        filledRow
      ],
      img.map(function (row) {
            return [
                      [
                        fill,
                        fill
                      ],
                      row,
                      [
                        fill,
                        fill
                      ]
                    ].flat();
          }),
      [
        filledRow,
        filledRow
      ]
    ].flat();
  var fill$p = algo[Tools.string_to_int_radix([
                filledRow,
                filledRow,
                filledRow
              ].flat().join(""), 2)];
  return [
          Tools.range(0, maxY).map(function (y) {
                return Tools.range(0, maxX).map(function (x) {
                            var subImg = img$p.slice(y, y + 3 | 0).map(function (__x) {
                                  return __x.slice(x, x + 3 | 0);
                                });
                            var keyB = subImg.flat().join("");
                            var key = Tools.string_to_int_radix(keyB, 2);
                            return algo[key];
                          });
              }),
          fill$p
        ];
}

AoC.getInput("2021", "20", (function (input_) {
        var input = input_.split("\n\n");
        var algo = Tools.filterMap(Tools.exn(Tools.$$Array.get(input, 0)).split(""), (function (x) {
                switch (x) {
                  case "#" :
                      return "1";
                  case "." :
                      return "0";
                  default:
                    return ;
                }
              }));
        var inputImg = Tools.lines(Tools.exn(Tools.$$Array.get(input, 1))).map(function (line) {
              return line.split("").map(function (x) {
                          if (x === "#") {
                            return "1";
                          } else {
                            return "0";
                          }
                        });
            });
        var match = enhance(enhance([
                  inputImg,
                  "0"
                ], algo), algo);
        console.log(match[0].flat().filter(function (x) {
                  return x === "1";
                }).length);
        var match$1 = Tools.reduce(Tools.range(1, 50), [
              inputImg,
              "0"
            ], (function (acc, param) {
                return enhance(acc, algo);
              }));
        console.log(match$1[0].flat().filter(function (x) {
                  return x === "1";
                }).length);
        
      }));

exports.draw = draw;
exports.enhance = enhance;
/*  Not a pure module */
