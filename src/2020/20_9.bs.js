// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var AoC = require("../AoC.bs.js");
var Tools = require("../Tools.bs.js");
var Caml_option = require("rescript/lib/js/caml_option.js");
var Caml_splice_call = require("rescript/lib/js/caml_splice_call.js");

AoC.getInput("2020", "9", (function (input_) {
        var input = Tools.filterMap(Tools.lines(input_), Tools.string_to_int);
        var invalid = Tools.exn(Caml_option.undefined_to_opt(input.slice(25).find(function (x, i, param) {
                      var prev = input.slice(i, i + 25 | 0);
                      return !prev.some(function (y) {
                                  return prev.includes(x - y | 0);
                                });
                    })));
        console.log("part 1:", invalid);
        var __x = Tools.findMap(Tools.range(1, input.length), (function (highI) {
                var _sum = 0;
                var _lowI = highI;
                while(true) {
                  var lowI = _lowI;
                  var sum = _sum;
                  if (sum === invalid) {
                    var seq = input.slice(lowI, highI);
                    return Caml_splice_call.spliceApply(Math.min, [seq]) + Caml_splice_call.spliceApply(Math.max, [seq]) | 0;
                  }
                  if (lowI === 0) {
                    return ;
                  }
                  _lowI = lowI - 1 | 0;
                  _sum = sum + input[lowI - 1 | 0] | 0;
                  continue ;
                };
              }));
        console.log("part 2:", __x);
        
      }));

/*  Not a pure module */
