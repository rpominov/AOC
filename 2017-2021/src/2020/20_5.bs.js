// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var AoC = require("../AoC.bs.js");
var Tools = require("../Tools.bs.js");
var Caml_obj = require("rescript/lib/js/caml_obj.js");
var Belt_Option = require("rescript/lib/js/belt_Option.js");
var Caml_option = require("rescript/lib/js/caml_option.js");
var Caml_splice_call = require("rescript/lib/js/caml_splice_call.js");
var Belt_SortArrayInt = require("rescript/lib/js/belt_SortArrayInt.js");

function parseBinary(str) {
  return Tools.string_to_int_radix(str.split("").map(function (x) {
                    if (x === "F" || x === "L") {
                      return "0";
                    } else {
                      return "1";
                    }
                  }).join(""), 2);
}

AoC.getInput("2020", "5", (function (input) {
        var ids = Tools.lines(input).map(function (line) {
              return (parseBinary(line.slice(0, 7)) << 3) + parseBinary(line.slice(7, 10)) | 0;
            });
        console.log(Caml_splice_call.spliceApply(Math.max, [ids]));
        console.log(Belt_Option.map(Caml_option.undefined_to_opt(Belt_SortArrayInt.stableSort(ids).find(function (x, i, arr) {
                          return Caml_obj.caml_equal(x + 2 | 0, Tools.$$Array.get(arr, i + 1 | 0));
                        })), (function (x) {
                    return x + 1 | 0;
                  })));
        
      }));

var $$Option;

exports.$$Option = $$Option;
exports.parseBinary = parseBinary;
/*  Not a pure module */
